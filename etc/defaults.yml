# Unmasking tool config file for defining default unmasking experiment
# configuration parameters.
#
# These values can be overridden via job-specific configuration files
# You can append % to the names of objects or lists in your job config
# to inherit from this default configuration.
#
# You can use variables starting with $ for values which are defined
# in job.experiment.configurations. The definition consists of a list
# of values for this variable, each representing a separate experiment
# configuration. The specified aggregator will be used to aggregate
# results of multiple configurations.

---

# Defaults for job configuration
job:
  # Output directory
  output_dir: out

  # Default feature set for representing texts in vectors
  #
  # You can also specify an optional dictionary of parameters for
  # configuring properties of this feature set.
  classifier.feature_set:
    name: features.feature_sets.AvgWordFreqFeatureSet

  # Default samplers for generating chunk pairs.
  #
  # You can also specify an optional dictionary of parameters for
  # configuring properties of this feature set.
  classifier.sampler:
    name: features.sampling.RandomOversampler

  # Default execution strategy to be applied
  exec.strategy:
    name: unmasking.strategies.FeatureRemoval
    parameters:
      # Number of feature to eliminate in each iterations
      eliminate: 10

      # Number of unmasking iterations
      iterations: 10

      # Feature vector size
      vector_size: 250

      # Number of cross-validation folds for comparing two texts of a pair
      folds: 10

      # Whether to use relative instead of absolute feature weights.
      relative: false

      # Whether to monotonize curves after unmasking
      monotonize: false

  # Output formats for specific events and optional parameters.
  # For events you can specify the name and optionally a list of senders to listen to.
  #
  # For example:
  # events:
  #   - name: onProgress
  #     senders:
  #       - input.formats.BookSampleParser
  outputs:
    # Accumulate unmasking raw and meta data
    - name: output.formats.UnmaskingStatAccumulator
      events:
        - name: onPairGenerated
        - name: onUnmaskingFinished

    # Visualize unmasking curves
    - name: output.formats.UnmaskingCurvePlotter

      # Plot RC file path relative to the application directory.
      # This configures basic plot parameters such as used markers and colors
      # or dynamic matplotlib settings.
      rc_file: plot_rc.yml

      # Other parameters (settings here take precedence of the RC file)
      parameters:
        # Do not display live plot, only write final image to disk
        display: false

      events:
        - name: onUnmaskingRoundFinished

    # Print pair building and chunking progress
    - name: output.formats.ProgressPrinter
      events:
        - name: onChunkingProgress
        - name: onPairGenerated

  # Global experiment settings
  experiment:
    # Definition of values for experiment configurations.
    # This is a dictionary of variable names mapping to a vector of possible
    # configuration values. An experiment will be run multiple times, once
    # per configuration value.
    configurations: null

    # Expander for experiment configurations.
    #
    # Options are:
    # - job.configuration.ZipExpander
    # - job.configuration.ProductExpander
    #
    # The zip expander will generate n configurations for m vectors
    # containing n values each (vectors must have the same length).
    # The product expander will generate the Cartesian product with all
    # n^m (or n1*n2*...*nm for vectors of different lengths) possible
    # combinations
    #
    # WARNING: building the Cartesian product is linear to the number of
    # dimensions of a single vector, but exponential to the overall number
    # of vectors. Make sure you have enough memory.
    configuration_expander:
      name: job.configuration.ZipExpander

    # Number of repeated runs to perform per configuration
    repetitions: 1

    # Aggregator formats to aggregate results of multiple runs
    # of various configurations.
    # Parameters are the same as for outputs.
    aggregators:
      # Aggregate curves by averaging them
      - name: output.aggregators.CurveAverageAggregator
        events:
          - name: onUnmaskingFinished
          - name: onPairGenerated

      # Visualize aggregated curves
      - name: output.aggregators.AggregatedCurvePlotter
        rc_file: plot_rc.yml
        parameters:
          display: false
        events:
          - name: onJobFinished
